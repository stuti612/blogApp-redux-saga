{"version":3,"sources":["modules/posts/Posts.actions.js","components/Home.js","components/AddPost.js","components/PostDetail.js","App.js","modules/posts/Posts.reducer.js","store/reducer.js","utils/api.js","modules/posts/Posts.saga.js","store/saga.js","store/index.js","index.js"],"names":["GET_POSTS","GET_POSTS_SUCCESS","GET_POSTS_FAILED","ADD_POST","ADD_POST_SUCCESS","ADD_POST_FAILED","GET_COMMENTS","GET_COMMENTS_SUCCESS","GET_COMMENTS_FAILED","getPostsFailed","payload","type","addPostFailed","getCommentsFailed","Home","dispatch","useDispatch","posts","useSelector","state","loading","error","useEffect","className","length","map","post","style","textDecoration","to","id","title","body","AddPost","useState","setTitle","setBody","value","onChange","e","target","placeholder","rows","cols","onClick","PostDetail","postId","useParams","comments","comment","name","email","App","path","element","initialState","isLoading","combineReducers","action","message","getPosts","fetch","then","response","json","catch","Promise","reject","addPost","data","method","JSON","stringify","getPostDetails","getPostsSaga","getPostsWatcher","addPostsSaga","addPostWatcher","getCommentsSaga","getCommentsWatcher","postsSaga","call","put","takeEvery","takeLeading","all","sagaMiddleware","createSagaMiddleware","withDevTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","rootSaga","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d771ef75.chunk.js","sourcesContent":["export const GET_POSTS = \"GET_POSTS\";\nexport const GET_POSTS_SUCCESS = \"GET_POSTS_SUCCESS\";\nexport const GET_POSTS_FAILED = \"GET_POSTS_FAILED\";\n\nexport const ADD_POST = \"ADD_POST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILED = \"ADD_POST_FAILED\";\n\nexport const GET_COMMENTS = \"GET_COMMENTS\";\nexport const GET_COMMENTS_SUCCESS = \"GET_COMMENTS_SUCCESS\";\nexport const GET_COMMENTS_FAILED = \"GET_COMMENTS_FAILED\";\n\nexport const getPosts = (payload) => ({\n  type: GET_POSTS,\n  payload,\n});\n\nexport const getPostsSuccess = (payload) => ({\n  type: GET_POSTS_SUCCESS,\n  payload,\n});\n\nexport const getPostsFailed = (payload) => ({\n  type: GET_POSTS_FAILED,\n  payload,\n});\n\nexport const addPost = (payload) => ({\n  type: ADD_POST,\n  payload,\n});\n\nexport const addPostSuccess = (payload) => ({\n  type: ADD_POST_SUCCESS,\n  payload,\n});\n\nexport const addPostFailed = (payload) => ({\n  type: ADD_POST_FAILED,\n  payload,\n});\n\nexport const getComments = (payload) => ({\n  type: GET_COMMENTS,\n  payload,\n});\n\nexport const getCommentsSuccess = (payload) => ({\n  type: GET_COMMENTS_SUCCESS,\n  payload,\n});\n\nexport const getCommentsFailed = (payload) => ({\n  type: GET_COMMENTS_FAILED,\n  payload,\n});\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getPosts } from \"../modules/posts/Posts.actions\";\nimport \"./Home.css\";\n\nfunction Home() {\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.posts.posts);\n  const loading = useSelector((state) => state.posts.loading);\n  const error = useSelector((state) => state.posts.error);\n  useEffect(() => {\n    dispatch(getPosts());\n  }, []);\n\n  return (\n    <div className=\"home\">\n      {posts.loading && <p>Loading...</p>}\n      {error && !loading && <p>{error}</p>}\n      {posts.length > 0 &&\n        posts.map((post) => {\n          return (\n            <div className=\"post--card\">\n              <Link style={{ textDecoration: \"none\" }} to={`/post/${post.id}`}>\n                <div className=\"post--title\">{post.title}</div>\n              </Link>\n              <div className=\"post--body\">{post.body}</div>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addPost } from \"../modules/posts/Posts.actions\";\nimport \"./AddPost.css\";\n\nfunction AddPost() {\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  return (\n    <div className=\"addpost\">\n      <input\n        className=\"input__title\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"Title...\"\n      />\n      <textarea\n        className=\"input__body\"\n        value={body}\n        onChange={(e) => setBody(e.target.value)}\n        placeholder=\"Description...\"\n        rows=\"25\"\n        cols=\"30\"\n      />\n      <input\n        type=\"submit\"\n        className=\"submit--btn\"\n        onClick={() => {\n          dispatch(addPost({ title, body }));\n        }}\n      />\n    </div>\n  );\n}\n\nexport default AddPost;\n","import React, { useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getComments, getPosts } from \"../modules/posts/Posts.actions\";\nimport \"./PostDetail.css\";\n\nfunction PostDetail() {\n  const dispatch = useDispatch();\n  const { postId } = useParams();\n\n  useEffect(() => {\n    dispatch(getComments({ postId }));\n    // dispatch(getPosts());\n  }, []);\n\n  //   function getPostDetails(posts, postId) {\n  //     return posts.find((post) => post.id === postId);\n  //   }\n\n  const comments = useSelector((state) => state.posts.comments);\n  const loading = useSelector((state) => state.posts.loading);\n  const error = useSelector((state) => state.posts.error);\n  //   const posts = useSelector((state) => state.posts.posts);\n\n  //   const post = getPostDetails(posts, postId);\n\n  return (\n    <div className=\"postDetails\">\n      <Link className=\"goBack\" to=\"/\">\n        See All Posts\n      </Link>\n      <div className=\"heading\">Comments</div>\n      {/* <div>\n        <h3>{post.title}</h3>\n        <h6>{post.body}</h6>\n      </div> */}\n      {comments.loading && <p>Loading...</p>}\n      {error && !loading && <p>{error}</p>}\n      {comments.length > 0 &&\n        comments.map((comment) => {\n          return (\n            <div className=\"postDetails__comments\">\n              <div className=\"comment--name\">{comment.name}</div>\n              <small className=\"comment--email\">{comment.email}</small>\n              <div className=\"comment--body\">{comment.body}</div>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default PostDetail;\n","import React from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport AddPost from \"./components/AddPost\";\nimport PostDetail from \"./components/PostDetail\";\nimport { useDispatch } from \"react-redux\";\nimport \"./App.css\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <nav className=\"navbar\">\n        <div className=\"navbar__name\">Saaspect</div>\n        <div className=\"navbar__btn\">\n          <Link to=\"/\">\n            <button className=\"btn btn--home\">Home</button>\n          </Link>\n          <Link to=\"/addpost\">\n            <button className=\"btn btn--post\">Add Post</button>\n          </Link>\n        </div>\n      </nav>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/addpost\" element={<AddPost />} />\n        <Route path=\"/post/:postId\" element={<PostDetail />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import {\n  ADD_POST,\n  ADD_POST_FAILED,\n  ADD_POST_SUCCESS,\n  GET_COMMENTS,\n  GET_COMMENTS_FAILED,\n  GET_COMMENTS_SUCCESS,\n  GET_POSTS,\n  GET_POSTS_FAILED,\n  GET_POSTS_SUCCESS,\n} from \"./Posts.actions\";\n\nconst initialState = {\n  isLoading: false,\n  posts: [],\n  error: null,\n  comments: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case GET_POSTS_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        posts: action.payload,\n      };\n    case GET_POSTS_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload.message,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case ADD_POST_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        posts: [...state.posts, action.payload],\n      };\n    case ADD_POST_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload.message,\n      };\n    case GET_COMMENTS:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case GET_COMMENTS_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        comments: action.payload,\n      };\n    case GET_COMMENTS_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload.message,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport posts from \"../modules/posts/Posts.reducer\";\n\nexport default combineReducers({\n  posts,\n});\n","export const getPosts = () => {\n  return fetch(\"https://jsonplaceholder.typicode.com/posts\")\n    .then((response) => response.json())\n    .then((json) => json)\n    .catch((error) => Promise.reject(error));\n};\n\nexport const addPost = (data) => {\n  return fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n    method: \"post\",\n    body: JSON.stringify(data),\n  })\n    .then((response) => response.json())\n    .then((json) => json)\n    .catch((error) => Promise.reject(error));\n};\n\nexport const getPostDetails = (postId) => {\n  return fetch(`https://jsonplaceholder.typicode.com/posts/${postId}/comments`)\n    .then((response) => response.json())\n    .then((json) => json)\n    .catch((error) => Promise.reject(error));\n};\n","import { takeEvery, all, call, put, takeLeading } from \"redux-saga/effects\";\nimport {\n  GET_POSTS,\n  getPostsSuccess,\n  getPostsFailed,\n  ADD_POST,\n  addPostSuccess,\n  addPostFailed,\n  GET_COMMENTS,\n  getCommentsSuccess,\n  getCommentsFailed,\n} from \"./Posts.actions\";\nimport { getPosts, addPost, getPostDetails } from \"../../utils/api\";\n\nfunction* getPostsSaga() {\n  try {\n    const data = yield call(getPosts);\n    //   console.log(data);\n    yield put(getPostsSuccess(data));\n  } catch (error) {\n    yield put(getPostsFailed(error.message));\n  }\n}\n\nfunction* getPostsWatcher() {\n  yield takeEvery(GET_POSTS, getPostsSaga);\n}\n\nfunction* addPostsSaga(action) {\n  try {\n    const data = yield call(addPost, action.payload);\n    yield put(addPostSuccess({ ...action.payload, ...data }));\n  } catch (error) {\n    yield put(addPostFailed(error.message));\n  }\n}\n\nfunction* addPostWatcher() {\n  yield takeLeading(ADD_POST, addPostsSaga);\n}\n\nfunction* getCommentsSaga(action) {\n  try {\n    const data = yield call(getPostDetails, action.payload.postId);\n    yield put(getCommentsSuccess(data));\n  } catch (error) {\n    yield put(getCommentsFailed(error.message));\n  }\n}\n\nfunction* getCommentsWatcher() {\n  yield takeEvery(GET_COMMENTS, getCommentsSaga);\n}\n\nexport default function* postsSaga() {\n  yield all([getPostsWatcher(), addPostWatcher(), getCommentsWatcher()]);\n}\n","import { all } from \"redux-saga/effects\";\nimport postsSaga from \"../modules/posts/Posts.saga\";\n\nexport default function* () {\n  yield all([postsSaga()]);\n}\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./reducer\";\nimport rootSaga from \"./saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst withDevTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  withDevTools(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}